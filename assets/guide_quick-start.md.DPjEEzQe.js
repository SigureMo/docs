import{_ as a,c as i,a0 as t,o as p}from"./chunks/framework.DX7EX5Ix.js";const F=JSON.parse('{"title":"快速开始","description":"","frontmatter":{},"headers":[],"relativePath":"guide/quick-start.md","filePath":"guide/quick-start.md"}'),l={name:"guide/quick-start.md"};function n(e,s,h,o,k,d){return p(),i("div",null,s[0]||(s[0]=[t(`<h1 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h1><p>嘿！你好呀～这里是 yutto，一个可爱的命令行驱动的 B 站视频下载工具～</p><p>我的工作方式非常简单快捷，你只需要提供给我 B 站的链接，我就可以帮你下载好视频啦～就像这样：</p><div class="language-sh"><pre><code>
❯ yutto https://www.bilibili.com/video/BV1Er4y1h7FX
 <span style="color:#0096FF;">INFO</span>  未提供 SESSDATA，无法下载会员专享剧集哟～
<span style="color:var(--vp-code-block-bg);background-color:cyan;"> 投稿视频 </span> 《原神》2.5版本PV：「薄樱初绽时」
 <span style="color:#0096FF;">INFO</span>  开始处理视频 《原神》2.5版本PV：「薄樱初绽时」
 <span style="color:#0096FF;">INFO</span>  共包含以下 12 个视频流：
 <span style="color:#0096FF;">INFO</span>  <span style="color:#0096FF;">* 0 [AVC ] [1920x1080] &lt;1080P 高清&gt; #3</span>
 <span style="color:#0096FF;">INFO</span>    1 [HEVC] [1920x1080] &lt;1080P 高清&gt; #3
 <span style="color:#0096FF;">INFO</span>    2 [AV1 ] [1920x1080] &lt;1080P 高清&gt; #3
 <span style="color:#0096FF;">INFO</span>    3 [AVC ] [1280x720 ] &lt;720P 高清 &gt; #3
 <span style="color:#0096FF;">INFO</span>    4 [HEVC] [1280x720 ] &lt;720P 高清 &gt; #3
 <span style="color:#0096FF;">INFO</span>    5 [AV1 ] [1280x720 ] &lt;720P 高清 &gt; #3
 <span style="color:#0096FF;">INFO</span>    6 [AVC ] [ 852x480 ] &lt;480P 清晰 &gt; #3
 <span style="color:#0096FF;">INFO</span>    7 [HEVC] [ 852x480 ] &lt;480P 清晰 &gt; #3
 <span style="color:#0096FF;">INFO</span>    8 [AV1 ] [ 852x480 ] &lt;480P 清晰 &gt; #3
 <span style="color:#0096FF;">INFO</span>    9 [HEVC] [ 640x360 ] &lt;360P 流畅 &gt; #3
 <span style="color:#0096FF;">INFO</span>   10 [AVC ] [ 640x360 ] &lt;360P 流畅 &gt; #3
 <span style="color:#0096FF;">INFO</span>   11 [AV1 ] [ 640x360 ] &lt;360P 流畅 &gt; #3
 <span style="color:#0096FF;">INFO</span>  共包含以下 3 个音频流：
 <span style="color:#0096FF;">INFO</span>  <span style="color:magenta;">* 0 [MP4A] &lt;320kbps &gt;</span>
 <span style="color:#0096FF;">INFO</span>    1 [MP4A] &lt; 64kbps &gt;
 <span style="color:#0096FF;">INFO</span>    2 [MP4A] &lt;128kbps &gt;
<span style="color:var(--vp-code-block-bg);background-color:cyan;"> 弹幕 </span> ASS 弹幕已生成
 <span style="color:#0096FF;">INFO</span>  开始下载……
<span style="color:green;">━━━━━━━━━━━━━━━━━━━━━━╸</span>━━━━━━━━━  45.98 MiB/ 65.79 MiB 8.79 MiB/⚡
</code>
</pre></div><p>下面我将会从安装开始介绍我的使用方式～</p><h2 id="环境配置" tabindex="-1">环境配置 <a class="header-anchor" href="#环境配置" aria-label="Permalink to &quot;环境配置&quot;">​</a></h2><p>如果你使用 homebrew、yay、docker 等可以自动帮助你配置环境的方式来安装，此部分内容可以跳过～</p><h3 id="ffmpeg-下载与配置" tabindex="-1">FFmpeg 下载与配置 <a class="header-anchor" href="#ffmpeg-下载与配置" aria-label="Permalink to &quot;FFmpeg 下载与配置&quot;">​</a></h3><h3 id="python-解释器安装" tabindex="-1">Python 解释器安装 <a class="header-anchor" href="#python-解释器安装" aria-label="Permalink to &quot;Python 解释器安装&quot;">​</a></h3><h2 id="从安装开始" tabindex="-1">从安装开始 <a class="header-anchor" href="#从安装开始" aria-label="Permalink to &quot;从安装开始&quot;">​</a></h2><p>我提供了多种安装方式，你可以自行选择其中一种即可～</p><h3 id="通过包管理器一键安装测试中" tabindex="-1">通过包管理器一键安装<sup>测试中</sup> <a class="header-anchor" href="#通过包管理器一键安装测试中" aria-label="Permalink to &quot;通过包管理器一键安装&lt;sup&gt;测试中&lt;/sup&gt;&quot;">​</a></h3><p>我目前可以通过一些包管理器直接安装～这是最简单快捷的安装方式～</p><p>Homebrew 用户可以尝试下面的命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> siguremo/tap</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yutto</span></span></code></pre></div><p>使用 yay（Arch 上的 AUR 包管理器）的用户可以尝试下这样的命令（感谢 @ouuan）：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yutto</span></span></code></pre></div><h3 id="使用-docker测试中" tabindex="-1">使用 Docker<sup>测试中</sup> <a class="header-anchor" href="#使用-docker测试中" aria-label="Permalink to &quot;使用 Docker&lt;sup&gt;测试中&lt;/sup&gt;&quot;">​</a></h3><p>你也可以尝试使用 docker 直接运行（运行时的更多参数需要参考下后面的内容～）</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/download:/app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> siguremo/yutto</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options]</span></span></code></pre></div><p>与直接本机运行不同的是，这里的下载目标路径是通过 <code>-v &lt;path&gt;:/app</code> 指定的，也就是说 docker 内的我会将内容下载到 docker 里的 <code>/app</code> 目录下，与之相对应的挂载点 <code>&lt;path&gt;</code> 就是下载路径。你也可以直接挂载到 <code>$(pwd)</code>，此时就和本机运行我的默认行为一致啦，也是下载到当前目录下～</p><h3 id="使用-pip-安装-需自行配置环境" tabindex="-1">使用 pip 安装 <sup>需自行配置环境</sup> <a class="header-anchor" href="#使用-pip-安装-需自行配置环境" aria-label="Permalink to &quot;使用 pip 安装 &lt;sup&gt;需自行配置环境&lt;/sup&gt;&quot;">​</a></h3><p>由于我是基于 Python 开发的，因此我当然也是可以通过 pip 安装啦。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --pre</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yutto</span></span></code></pre></div><p>如果你是非 Windows 系统，可以通过 <code>[uvloop]</code> 标志安装额外的 <code>uvloop</code> 包以获得更好的协程性能。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --pre</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;yutto[uvloop]&quot;</span></span></code></pre></div><h3 id="从-github-获取最新源码手动安装-需自行配置环境" tabindex="-1">从 GitHub 获取最新源码手动安装 <sup>需自行配置环境</sup> <a class="header-anchor" href="#从-github-获取最新源码手动安装-需自行配置环境" aria-label="Permalink to &quot;从 GitHub 获取最新源码手动安装 &lt;sup&gt;需自行配置环境&lt;/sup&gt;&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/yutto-dev/yutto.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yutto/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> poetry</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">poetry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./dist/yutto-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.whl</span></span></code></pre></div><h2 id="yutto-一下" tabindex="-1">yutto 一下～ <a class="header-anchor" href="#yutto-一下" aria-label="Permalink to &quot;yutto 一下～&quot;">​</a></h2><p>嗯，跟随上面的指引后我应当可以正常工作啦，那么现在，请为我分配任务吧～</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yutto</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>没错，为我分配任务的方式就是这么简单～</p><p>不过值得注意的是这样只可以下载单个视频，如果有批量下载需求的话请添加 <code>-b/--batch</code> 参数：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yutto</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --batch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者使用其短参数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yutto</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>此时我会认为该 url 是一个批量下载链接，会从其中解析出多个视频链接出来进行下载。</p><p>下面举例说明一下：</p><p>这里的 <code>&lt;url&gt;</code> 是 <a href="https://www.bilibili.com/bangumi/play/ep395211" target="_blank" rel="noreferrer">《転スラ日記》</a> 第一话链接，那么如果你只想下载该话的话只需要运行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yutto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://www.bilibili.com/bangumi/play/ep395211</span></span></code></pre></div><p>或者如果你想要该番剧全集，请运行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yutto</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://www.bilibili.com/bangumi/play/ep395211</span></span></code></pre></div>`,40)]))}const c=a(l,[["render",n]]);export{F as __pageData,c as default};
